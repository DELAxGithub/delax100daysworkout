name: PR Code Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'Delax100DaysWorkout/**/*.swift'
      - 'Delax100DaysWorkout.xcodeproj/**'
      - '*.xcworkspace/**'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to check'
        required: false
        type: string

jobs:
  check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # PRの場合はPRブランチをチェックアウト
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          
      - name: Check Swift file syntax
        id: syntax_check
        run: |
          echo "🔍 Checking Swift files..."
          
          # Swift ファイルの基本構文チェック
          ERRORS=0
          
          # .swift ファイルを探して基本チェック
          find . -name "*.swift" -type f | while read -r file; do
            echo "Checking: $file"
            
            # 基本的な構文エラーをチェック
            if grep -n "import UIKit\|import SwiftUI\|import Foundation" "$file" > /dev/null; then
              echo "✅ $file - Import statements found"
            else
              echo "⚠️ $file - No standard imports found"
            fi
            
            # 未閉じの括弧チェック（簡易版）
            if [ "$(grep -o '{' "$file" | wc -l)" -ne "$(grep -o '}' "$file" | wc -l)" ]; then
              echo "❌ $file - Mismatched braces detected"
              ERRORS=$((ERRORS + 1))
            fi
          done
          
          if [ $ERRORS -gt 0 ]; then
            echo "❌ Found $ERRORS potential syntax issues"
            exit 1
          else
            echo "✅ Basic syntax check passed"
          fi
          
      - name: Comment check result on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const checkSuccess = ${{ steps.syntax_check.outcome == 'success' }};
            const prNumber = context.payload.pull_request.number;
            
            let comment = '';
            if (checkSuccess) {
              comment = `## ✅ Code Check Passed!
              
              🎉 **基本的なコードチェックが完了しました**
              
              ### チェック内容
              - **Swift構文**: 基本構文エラーなし
              - **Import文**: 適切なImport文を確認
              - **括弧バランス**: 開始・終了括弧のバランス確認
              - **Status**: 手動レビュー・マージ準備完了
              
              ### 次のステップ
              1. コード変更内容をレビュー
              2. 手動でマージを実行
              3. マージ後は自動でローカル同期されます
              4. Xcodeでローカルビルド・テストを実行
              
              **このPRは手動マージの準備ができています！** 🚀`;
              
              // Add ready-for-review label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['✅ Code check passed', 'Ready for review']
              });
              
            } else {
              comment = `## ❌ Code Check Failed
              
              😞 **基本的なコードチェックで問題が見つかりました**
              
              ### チェック結果
              - **Swift構文**: 構文エラーの可能性あり
              - **Status**: 修正が必要
              
              ### 次のステップ
              1. [チェックログ](${context.payload.pull_request.html_url}/checks) で詳細を確認
              2. コードを修正してプッシュ
              3. 再チェックが自動実行されます
              
              **修正後に再度チェックします** 🔧`;
              
              // Add needs-fix label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['❌ Code check failed', 'needs-fix']
              });
            }
            
            // Post comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });